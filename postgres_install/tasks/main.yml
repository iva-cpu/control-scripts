---
  - name: Install pgdg package signing key (Debian/pgdg)
    apt_key:
      keyserver: pgp.mit.edu
      id: ACCC4CF8
    register: __postgresql_apt_key_result
    until: __postgresql_apt_key_result is succeeded
    retries: 5
    delay: 5
    when: postgresql_flavor is defined and postgresql_flavor == "pgdg"

  - name: Check ansible distribution release version
    shell: "lsb_release -cs"
    register: ansible_distribution_release

  - name: Print ansible_distribution_release version
    debug: var=ansible_distribution_release.stdout

  - name: Install pgdg repository (Debian/pgdg)
    apt_repository:
      repo: "deb http://apt.postgresql.org/pub/repos/apt/ {{ ansible_distribution_release.stdout }}-pgdg main"
      update_cache: yes
    when: postgresql_flavor is defined and postgresql_flavor == "pgdg"

  - name: Install PostgreSQL (Debian)
    apt:
      name: postgresql{{ '-' ~ postgresql_version if postgresql_version is defined else '' }}
    register: __postgresql_apt_result
    until: __postgresql_apt_result is succeeded
    retries: 5
    delay: 5

  - name: Set max number of postgresql connections
    become: yes
    lineinfile:
      dest: /etc/postgresql/{{ postgresql_version }}/main/postgresql.conf
      regexp: '^max_connections\s*=\s*\d+.*$'
      line: "max_connections = {{ pg_max_conn }}"
      backrefs: yes
    # notify: Restart postgresql

  - name: Get installed version
    command: dpkg-query -f ${Version;3} --show postgresql
    when: postgresql_version is not defined
    register: __postgresql_version_query_result
    changed_when: false

  - name: Set version fact
    set_fact:
      postgresql_version: "{{ __postgresql_version_query_result.stdout.split('+') | first }}"
    when: postgresql_version is not defined
